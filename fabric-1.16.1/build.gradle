buildscript {
    repositories {
        maven {
            name = 'Fabric'
            url = 'https://maven.fabricmc.net/'
        }
        gradlePluginPortal()
    }
    dependencies {
        classpath group: 'net.fabricmc', name: 'fabric-loom', version: '0.9.49'
    }
}
apply plugin: 'fabric-loom'
apply plugin: 'scala'
apply plugin: 'maven-publish'

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = parent.project.archives_base_name
version = parent.version + "+fabric-" + project.minecraft_version
group = parent.group

configurations {
    implementation.extendsFrom(shadow)
}

dependencies {
    //to change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    modImplementation "net.fabricmc:fabric-language-scala:1.1.0+scala.2.13.6"

    shadow "io.circe:circe-parser_2.13:0.14.1"
    shadow "io.circe:circe-generic_2.13:0.14.1"
    shadow "io.circe:circe-generic-extras_2.13:0.14.1"
    shadow "io.circe:circe-config_2.13:0.8.0"

    compileOnly group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.2'

    // PSA: Some older mods, compiled on Loom 0.2.1, might have outdated Maven POMs.
    // You may need to force-disable transitiveness on them.

}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

java {
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}"}
    }
    from {
        configurations.shadow.collect { file ->
            [
                    "scala-library",
            ].any { file.toString().contains(it) } ? null : file.isDirectory() ? file : zipTree(file)
        }
    }
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            // add all the jars that should be included when publishing to maven
            artifact(remapJar) {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }

    // select the repositories you want to publish to
    repositories {
        // uncomment to publish to the local maven
        // mavenLocal()
    }
}
